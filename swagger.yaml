swagger: "2.0"
info:
  description: "This is a swagger spec for APIs provided by superdentist.io"
  version: "1.0.0"
  title: "SuperDentist APIs"
  contact:
    email: "superdentist.admin@superdentist.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "superdentist.io"
basePath: "/api/sd"
tags:
- name: "Registration APIs (C & U of CRUD)"
  description: "All these APIs deals with users (Specialist/GD alike)"
  externalDocs:
    description: "Find out more"
    url: "http://superdentist.io"
- name: "Registration APIs (R of CRUD)"
  description: "All these APIs deals with users (Specialist/GD alike)"
  externalDocs:
    description: "Find out more"
    url: "http://superdentist.io"
schemes:
- "https"
paths:
  /v1/clinic/registerAdmin:
    post:
      tags:
      - "Registration APIs (C & U of CRUD)"
      summary: "Register clinic"
      description: "Frontend upon firebase registration will call backend with token and details"
      operationId: "AdminRegistrationHandler"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/ClinicRegistrationData"
      responses:
        '200':
          $ref: '#/responses/PostClinicRegistrationResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/verifyAdmin:
    post:
      tags:
      - "Registration APIs (C & U of CRUD)"
      summary: "Verify clinic"
      description: " Frontend will tell backend that clinic has verified itself "
      operationId: "AdminVerificationHandler"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/ClinicVerificationData"
      responses:
        '200':
          $ref: '#/responses/PostClinicVerificationResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/addClinics:
    post:
      tags:
       - "Registration APIs (C & U of CRUD)"
      summary: "Add clinical addresses"
      description: "Provide a range of addresses associated with registered clinic"
      operationId: "AddPhysicalClinicsHandler"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/ClinicAddressRequest"
      responses:
        '200':
          $ref: '#/responses/PostClinicAddressResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/registerDoctors:
    post:
      tags:
       - "Registration APIs (C & U of CRUD)"
      summary: "Add clinical addresses"
      description: "Provide a range of doctors associated with each clinic"
      operationId: "RegisterClinicDoctors"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/ClinicDoctorsRegisterRequest"
      responses:
        '200':
          description: "Doctors have been successfully registered"
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/registerPMS:
    post:
      tags:
        - "Registration APIs (C & U of CRUD)"
      summary: Add all PMS used by current clinic
      description: Collect information on PMS used by current clinic
      operationId: "RegisterClinicPMS"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/RegisterClinicPMS"
      responses:
        '200':
          description: "PMS have registered for the clinic"
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/registerClinicServices:
    post:
      tags:
        - "Registration APIs (C & U of CRUD)"
      summary: Add all services clinic offers if any
      description: Collect information on services offered by clinic
      operationId: "RegisterSpecialityServices"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/RegisterClinicServices"
      responses:
        '200':
          description: "Services have registered for the clinic"
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/getClinics:
    get:
      tags:
       - "Registration APIs (R of CRUD)"
      summary: "Get all clinics associated with admin"
      description: "Get a list of clinics and info for admin"
      operationId: "GetPhysicalClinics"
      produces:
      - "application/json"
      responses:
        '200':
          $ref: '#/responses/GetClinicsResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/getDoctors/{clinicAddressId}:
    get:
      tags:
       - "Registration APIs (R of CRUD)"
      summary: "Get all doctors associated with give clinic"
      description: "Get all doctors associated with a clinic"
      operationId: "GetClinicDoctors"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        type: string
        name: "clinicAddressId"
        description: "unique address id of registered clinic"
        required: true

      responses:
        '200':
          $ref: '#/responses/GetClinicDoctorDetailsResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/getAllDoctors:
    get:
      tags:
       - "Registration APIs (R of CRUD)"
      summary: "Get all doctors associated with given admin"
      description: "Get all doctors associated with admin"
      operationId: "GetAllDoctors"
      produces:
      - "application/json"
      responses:
        '200':
          $ref: '#/responses/GetClinicDoctorDetailsResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"

definitions:
  RegisterClinicServices:
    type: object
    properties:
      services:
        type: array
        items:
          type: object
          properties:
            serviceGroup:
              type: string
            serviceList:
              type: array
              items:
                type: string
            
  RegisterClinicPMS:
    type: object
    properties:
      pmsNames:
        type:  array
        items:
          type: string
  ClinicRegistrationData:
    type: "object"
    properties:
      emailId:
        type: "string"
      clinicType:
        type: "string"
      isVerified:
        type: "boolean"
        default: false
    xml:
      name: "Clinic"
  ClinicVerificationData:
    type: object
    properties:
      isVerified:
        type: boolean
        default: false
  PostRegistrationResponse:
    type: object
    properties:
      emailId:
        type: string
      isVerified:
        type: boolean
  ClinicAddressRequest:
    type: object
    properties:
      clinicDetails:
        type:  array
        items:
          type: object
          properties:
            clinicName:
              type: string
            clinicAddress:
              type: string
            clinicPhoneNumber:
              type: string
            clinicSpeciality:
              type: array
              items:
                type: string
  ClinicAddressResponse:
    type: object
    properties:
      clinicDetails:
        type:  array
        items:
          type: object
          properties:
            clinicAddressId:
              type: string
            clinicName:
              type: string
            clinicAddress:
              type: string
            clinicPhoneNumber:
              type: string
            clinicSpeciality:
              type: array
              items:
                type: string
  ClinicDoctorsRegisterRequest:
    type: object
    properties:
      doctorDetails:
        type: array
        items:
         type: object
         properties:
            clinicAddressId:
              type: string
            doctors:
              type: array
              items:
                type: object
                properties:
                  doctorPrefix:
                    type: string
                  doctorFirstName:
                    type: string
                  doctorLastName:
                    type: string
                  doctorEmailAddress:
                    type: string
                  doctorSpeciality:
                    type: array
                    items:
                      type: string
  GetClinics:
    type: object
    properties:
      clinicType:
        type: string
      clinicDetails:
        type: array
        items:
          type: object
          properties:
            clinicAddressId:
              type: string
            clinicName:
              type: string
            clinicAddress:
              type: string
            clinicPhoneNumber:
              type: string
            clinicSpeciality:
              type: array
              items:
                type: string
  ClinicDoctors:
    type: object
    properties:
      doctors:
        type: array
        items:
          type: object
          properties:
            clinicAddressId:
              type: string
            doctorPrefix:
              type: string
            doctorFirstName:
              type: string
            doctorLastName:
              type: string
            doctorEmailAddress:
              type: string
            doctorSpeciality:
              type: array
              items:
                type: string
              
responses:
  GetClinicsResponse:
    description: Retunrs a list of all clinics registered by admin
    schema:
      $ref: '#/definitions/GetClinics'
  PostClinicRegistrationResponse:
    description: Returns successful completion of register clinic stage one
    schema:
      $ref: '#/definitions/PostRegistrationResponse'
  PostClinicVerificationResponse:
    description: Returns successful completion of verify clinic in backend
    schema:
      $ref: '#/definitions/PostRegistrationResponse'
  PostClinicAddressResponse:
    description: Returns successful completion of clinic address registration
    schema:
      $ref: '#/definitions/ClinicAddressResponse'
  GetClinicDoctorDetailsResponse:
    description: Returns list of doctors associated with clinic address
    schema:
     $ref: '#/definitions/ClinicDoctors'
  