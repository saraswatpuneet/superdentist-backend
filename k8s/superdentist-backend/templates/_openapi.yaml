{{- define "sd.openapi" -}}
swagger: "2.0"
info:
  description: "This is a swagger spec for APIs provided by superdentist.io"
  version: "1.0.0"
  title: "SuperDentist APIs"
  contact:
    email: "superdentist.admin@superdentist.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "superdentist.io"
basePath: "/api/sd"
tags:
- name: "Registration APIs (C & U of CRUD)"
  description: "All these APIs deals with users (Specialist/GD alike)"
  externalDocs:
    description: "Find out more"
    url: "http://superdentist.io"
- name: "Registration APIs (R of CRUD)"
  description: "All these APIs deals with users (Specialist/GD alike)"
  externalDocs:
    description: "Find out more"
    url: "http://superdentist.io"
- name: "Referrals"
  description: "CRUD of Referrals"
  externalDocs:
    description: "Find out more"
    url: "http://superdentist.io"
schemes:
- "https"
- "wss"
paths:
  /v1/clinic/registerAdmin:
    post:
      tags:
      - "Registration APIs (C & U of CRUD)"
      summary: "Register clinic"
      description: "Frontend upon firebase registration will call backend with token and details"
      operationId: "AdminRegistrationHandler"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/ClinicRegistrationData"
      responses:
        '200':
          $ref: '#/responses/PostClinicRegistrationResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/passwordReset:
    put:
      tags:
      - "Registration APIs (C & U of CRUD)"
      summary: "Register clinic"
      operationId: "AdminPasswordReset"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/PasswordResetData"
      responses:
        '200':
          $ref: '#/responses/PostClinicRegistrationResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/verifyAdmin:
    post:
      tags:
      - "Registration APIs (C & U of CRUD)"
      summary: "Verify clinic"
      description: " Frontend will tell backend that admin has been verified"
      operationId: "AdminVerificationHandler"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/ClinicVerificationData"
      responses:
        '200':
          $ref: '#/responses/PostClinicVerificationResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/addClinics:
    post:
      tags:
       - "Registration APIs (C & U of CRUD)"
      summary: "Add clinical addresses"
      description: "Provide a range of addresses associated with registered clinic. Use websocket queryAddress to recommend users based on string text they fill."
      operationId: "AddPhysicalClinicsHandler"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/ClinicAddressRequest"
      responses:
        '200':
          $ref: '#/responses/PostClinicAddressResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/registerDoctors:
    post:
      tags:
       - "Registration APIs (C & U of CRUD)"
      summary: "Add clinical addresses"
      description: "Provide a range of doctors associated with each clinic, require clinic addressId generated when clinics were registered."
      operationId: "RegisterClinicDoctors"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/ClinicDoctorsRegisterRequest"
      responses:
        '200':
          description: "Doctors have been successfully registered"
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/registerPMS:
    post:
      tags:
        - "Registration APIs (C & U of CRUD)"
      summary: Add all PMS used by current clinic
      description: Collect information on PMS used by current clinic
      operationId: "RegisterClinicPMS"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/RegisterClinicPMS"
      responses:
        '200':
          description: "PMS have registered for the clinic"
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/addFavorites/{addressId}:
    post:
      tags:
        - "Registration APIs (C & U of CRUD)"
      summary: Add all favorite clinics by their PlaceID from google
      description: Add all favorite clinics by their PlaceID from google
      operationId: "AddFavoriteClinics"
      parameters:
      - in: "path"
        type: string
        name: "addressId"
        description: "unique address id of registered clinic"
        required: true
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/FavoritePlaces"
      responses:
        '200':
          description: "PMS have registered for the clinic"
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/removeFavorites/{addressId}:
    post:
      tags:
        - "Registration APIs (C & U of CRUD)"
      summary: Remove all favorite clinics by their PlaceID from google
      description: Remove all favorite clinics by their PlaceID from google
      operationId: "RemoveFavoriteClinics"
      parameters:
      - in: "path"
        type: string
        name: "addressId"
        description: "unique address id of registered clinic"
        required: true
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/FavoritePlaces"
      responses:
        '200':
          description: "PMS have registered for the clinic"
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []

  /v1/clinic/registerPMSAuth:
    post:
      tags:
        - "Registration APIs (C & U of CRUD)"
      summary: For each PMS add special auth details of partner clinics
      description: Collect information on PMS used by current clinic
      operationId: "AddPMSAuthDetails"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/RegisterPMSAuth"
      responses:
        '200':
          description: "PMS have registered for the clinic"
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/registerServices:
    post:
      tags:
        - "Registration APIs (C & U of CRUD)"
      summary: Add all services clinic offers if any
      description: Collect information on services offered by clinic
      operationId: "RegisterSpecialityServices"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/RegisterClinicServices"
      responses:
        '200':
          description: "Services have registered for the clinic"
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/getClinics:
    get:
      tags:
       - "Registration APIs (R of CRUD)"
      summary: "Get all clinics associated with admin"
      description: "Get a list of clinics and info for admin"
      operationId: "GetPhysicalClinics"
      produces:
      - "application/json"
      responses:
        '200':
          $ref: '#/responses/GetClinicsResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/getDoctors/{addressId}:
    get:
      tags:
       - "Registration APIs (R of CRUD)"
      summary: "Get all doctors associated with give clinic"
      description: "Get all doctors associated with a clinic"
      operationId: "GetClinicDoctors"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        type: string
        name: "addressId"
        description: "unique address id of registered clinic"
        required: true
      responses:
        '200':
          $ref: '#/responses/GetClinicDoctorDetailsResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/getAllDoctors:
    get:
      tags:
       - "Registration APIs (R of CRUD)"
      summary: "Get all doctors associated with given admin"
      description: "Get all doctors associated with admin"
      operationId: "GetAllDoctors"
      produces:
      - "application/json"
      responses:
        '200':
          $ref: '#/responses/GetClinicDoctorDetailsResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/queryAddress:
    get:
      tags:
       - "Registration APIs (C & U of CRUD)"
      summary: "Websocket implementation to get address suggestion in realtime"
      description: "FE will connect to websocket to to have realtime address suggestions, use wss://. API takes string as input once connected."
      operationId: "QueryAddressHandlerWebsocket"
      produces:
      - "application/json"
      responses:
        '200':
          $ref: '#/responses/PostAddressList'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/getAddressList:
    get:
      tags:
       - "Registration APIs (C & U of CRUD)"
      summary: "Websocket implementation to get address suggestion in realtime"
      description: "FE will connect to websocket to to have realtime address suggestions, use wss://. API takes string as input once connected."
      operationId: "GetAddressListRest"
      parameters:
      - in: "query"
        name: "searchText"
        type: string
        required: true
      produces:
      - "application/json"
      responses:
        '200':
          $ref: '#/responses/PostAddressList'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/getNearbySpecialists:
    post:
      tags:
       - "Registration APIs (R of CRUD)"
      summary: "Get all clinics nearby current admin selected clinic. Frontend will specific unique address id and radius and all clinics in App database will be returned."
      description: "Get a list of clinics nearby current admin clinic"
      operationId: "GetNearbyClinics"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/GetNearbySpecialist"
      responses:
        '200':
          $ref: '#/responses/GetNearbyClinicsResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/clinic/getFavorites/{addressId}:
    get:
      tags:
       - "Registration APIs (R of CRUD)"
      summary: "Get all favorite clinics favorited by GD"
      description: "Get a list of clinics nearby current admin clinic"
      operationId: "GetFavoriteClinics"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        type: string
        name: "addressId"
        description: "unique address id of registered clinic"
        required: true
      responses:
        '200':
          $ref: '#/responses/GetNearbyClinicsResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/referrals:
    post:
      tags:
       - "Referrals"
      summary: "Create a referral from GD to Specialist"
      description: "Create a Referral and send out emails"
      operationId: "CreateRefSpecialist"
      consumes:
         - multipart/form-data
         - application/json
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/ReferralDetails"
      responses:
        '200':
          $ref: '#/responses/CreateReferralResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/referrals/{referralId}:
    get:
      tags:
       - "Referrals"
      summary: "Get referral with given referral id"
      description:  "Get referral with given referral id"
      operationId: "GetOneReferral"
      consumes:
         - application/json
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "referralId"
        type: string
        required: true
      responses:
        '200':
          $ref: '#/responses/GetReferralListResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
    delete:
      tags:
       - "Referrals"
      summary: "Create a referral from GD to Specialist"
      description: "Create a Referral and send out emails"
      operationId: "DeleteReferral"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        type: string
        name: "referralId"
        description: "unique address id of registered clinic"
        required: true
      responses:
        '200':
          description: "Referral successfully deleted"
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/referrals/{referralId}/messages:
    post:
      tags:
       - "Referrals"
      summary: "Add comments to existing referral"
      description: "Add comments to referral"
      operationId: "AddCommentsToReferral"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        type: string
        name: "referralId"
        description: "unique address id of registered clinic"
        required: true
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/ReferralComments"
      responses:
        '200':
          $ref: '#/responses/CreateReferralResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
    get:
      tags:
       - "Referrals"
      summary: "Get comments to existing referral"
      description: "Get comments to referral"
      operationId: "GetAllMessages"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        type: string
        name: "referralId"
        description: "unique address id of registered clinic"
        required: true
      - in: "query"
        type: string
        name: "channel"
        description: "unique address id of registered clinic"
        required: false
      responses:
        '200':
          $ref: '#/responses/GetAllMessages'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/referrals/{referralId}/messages/{messageId}:
    get:
      tags:
       - "Referrals"
      summary: "Get comments to existing referral"
      description: "Get comments to referral"
      operationId: "GetOneMessage"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        type: string
        name: "referralId"
        description: "unique address id of registered clinic"
        required: true
      - in: "path"
        type: string
        name: "messageId"
        description: "unique messageId of comment"
        required: true
      responses:
        '200':
          $ref: '#/definitions/ReferralComments'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []

  /v1/referrals/{referralId}/status:
    put:
      tags:
       - "Referrals"
      summary: "Update status of a referral"
      description: "Update status of a referral"
      operationId: "UpdateReferralStatus"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        type: string
        name: "referralId"
        description: "unique address id of registered clinic"
        required: true
      - in: "body"
        name: "body"
        description: "Created clinic object"
        required: true
        schema:
          $ref: "#/definitions/ReferralStatus"
      responses:
        '200':
          $ref: '#/responses/CreateReferralResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/referrals/{referralId}/documents:
    post:
      tags:
       - "Referrals"
      summary: "Upload supporting document files"
      description: "Upload supporting documents"
      operationId: "UploadDocuments"
      consumes:
         - multipart/form-data
      produces:
      - "application/json"
      parameters:
      - in: "path"
        type: string
        name: "referralId"
        description: "unique address id of registered clinic"
        required: true
      responses:
        '200':
          $ref: '#/responses/CreateReferralResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
    get:
      tags:
       - "Referrals"
      summary: "Download all associated documents as zip file"
      description:  "Download all associated documents as zip file"
      operationId: "DownloadDocumentsAsZip"
      consumes:
         - application/json
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "referralId"
        type: string
        required: true
      responses:
        '200':
          description: "response if type Content-Disposition, streaming file data to local download"
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/referrals-by-clinic/dentist:
    get:
      tags:
       - "Referrals"
      summary: "Get all referrall for GD with addressId"
      description: "Get all referrall for GD with addressId"
      operationId: "GetAllReferralsGD"
      consumes:
         - application/json
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "addressId"
        type: string
        required: true
      responses:
        '200':
          $ref: '#/responses/GetReferralListResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []
  /v1/referrals-by-clinic/specialist:
    get:
      tags:
       - "Referrals"
      summary: "Get all referrall for SP with addressId"
      description: "Get all referrall for SP with addressId"
      operationId: "GetAllReferralsSP"
      consumes:
         - application/json
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "addressId"
        type: string
        required: true
      responses:
        '200':
          $ref: '#/responses/GetReferralListResponse'
        '401':
          description: "Unauthorized: Bad request or authorization details"
        '500':
          description: "Internal server error occured"
      security:
        - Bearer: []

securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"

definitions:
  CommentsList:
    type: array
    items:
      type: object
      properties:
        comments:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
                default: "xyz@abc.com"
              timeStamp:
                type: number
              text:
                type: string
              channel:
                type: string
                default: "c2c"
                enum:
                  - "c2c"
                  - "c2p"
  GetReferralList:
    type: array
    items:
      type: object
      properties:
        referralId:
          type: string
        document:
          type: array
          items:
            type: string
        fromPlaceId:
          type: string
        toPlaceId:
          type: string
        fromClinicName:
          type: string
        toClinicName:
          type: string
        fromClinicAddress:
          type: string
        toClinicAddress:
          type: string
        status:
          type: object
          properties:
            gdStatus:
              type: string
              enum:
                - "Ongoing"
                - "Scheduled"
                - "Completed"
            spStatus:
              type: string
              enum:
                - "Referred"
                - "Scheduled"
                - "Completed"
        reasons:
          type: array
          items:
            type: string
        history:
          type: array
          items:
            type: string
        tooth:
          type: array
          items:
            type: string
        createOn:
          type: string
        modifiedOn:
          type: string
        patientEmail:
          type: string
        patientFirstName:
          type: string
        patientLastName:
          type: string
        patientPhone:
          type: string
        fromEmail:
          type: string
        toEmail:
          type: string
        isDirty:
          type: boolean
          default: False
  ReferralStatus:
    type: object
    properties:
      status:
        type: object
        properties:
          gdStatus:
            type: string
            enum:
              - "Ongoing"
              - "Scheduled"
              - "Completed"
          spStatus:
            type: string
            enum:
              - "Referred"
              - "Scheduled"
              - "Completed"
  ReferralComments:
    type: object
    properties:
        comments:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
                default: "xyz@abc.com"
              timeStamp:
                type: number
              text:
                type: string
              channel:
                type: string
                default: "c2c"
                enum:
                  - "c2c"
                  - "c2p"
  ReferralResponse:
    type: object
    properties:
      referralId:
        type: string
      document:
        type: array
        items:
          type: string
      fromPlaceId:
        type: string
      toPlaceId:
        type: string
      fromClinicName:
        type: string
      toClinicName:
        type: string
      fromClinicAddress:
        type: string
      toClinicAddress:
        type: string
      status:
        type: object
        properties:
          gdStatus:
            type: string
            enum:
              - "Ongoing"
              - "Scheduled"
              - "Completed"
          spStatus:
            type: string
            enum:
              - "Referred"
              - "Scheduled"
              - "Completed"
      reasons:
        type: array
        items:
          type: string
      history:
        type: array
        items:
          type: string
      tooth:
        type: array
        items:
          type: string
      createOn:
        type: string
      modifiedOn:
        type: string
      patientEmail:
        type: string
      patientFirstName:
        type: string
      patientLastName:
        type: string
      patientPhone:
        type: string
      fromEmail:
        type: string
      toEmail:
        type: string
      isDirty:
        type: boolean
        default: False
  ReferralDetails:
    type: object
    properties:
      patient:
        type: object
        properties:
          firstName:
            type: string
          lastName:
            type: string
          email:
            type: string
          phone:
            type: string
      fromAddressId:
        type: string
      toAddressId:
        type: string
      toPlaceId:
        type: string
      status:
        type: object
        properties:
          gdStatus:
            type: string
            enum:
              - "Ongoing"
              - "Scheduled"
              - "Completed"
          spStatus:
            type: string
            enum:
              - "Referred"
              - "Scheduled"
              - "Completed"
      reasons:
        type: array
        items:
          type: string
      history:
        type: array
        items:
          type: string
      tooth:
        type: array
        items:
          type: string
  GetNearbySpecialist:
    type: object
    properties:
      addressId:
        type: string
      searchRadius:
        type: string
      specialities:
        type: string
  RegisterClinicServices:
    type: object
    properties:
      services:
        type: array
        items:
          type: object
          properties:
            serviceGroup:
              type: string
            serviceList:
              type: array
              items:
                type: string
            
  RegisterClinicPMS:
    type: object
    properties:
      pmsNames:
        type:  array
        items:
          type: string
  FavoritePlaces:
    type: object
    properties:
      placeIds:
        type:  array
        items:
          type: string
  RegisterPMSAuth:
    type: object
    properties:
      pmsAuthData:
        type: array
        items:
          type: object
          properties:
            pmsName:
              type: string
            authDetails:
              type: object
  ClinicRegistrationData:
    type: "object"
    properties:
      emailId:
        type: "string"
      isVerified:
        type: "boolean"
        default: false
    xml:
      name: "Clinic"
  PasswordResetData:
    type: "object"
    properties:
      emailId:
        type: "string"
  ClinicVerificationData:
    type: object
    properties:
      isVerified:
        type: boolean
        default: false
  PostRegistrationResponse:
    type: object
    properties:
      emailId:
        type: string
      isVerified:
        type: boolean
  ClinicAddressRequest:
    type: object
    properties:
      clinicDetails:
        type:  array
        items:
          type: object
          properties:
            type:
              type: "string"
              enum:
                - "specialist"
                - "dentist"
            name:
              type: string
            address:
              type: string
            emailAddress:
              type: string
            phoneNumber:
              type: string
            speciality:
              type: array
              items:
                type: string
  ClinicAddressResponse:
    type: object
    properties:
      clinicDetails:
        type:  array
        items:
          type: object
          properties:
            addressId:
              type: string
            name:
              type: string
            address:
              type: string
            phoneNumber:
              type: string
            speciality:
              type: array
              items:
                type: string
  ClinicDoctorsRegisterRequest:
    type: object
    properties:
      doctorDetails:
        type: array
        items:
         type: object
         properties:
            addressId:
              type: string
            doctors:
              type: array
              items:
                type: object
                properties:
                  prefix:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  emailAddress:
                    type: string
                  speciality:
                    type: array
                    items:
                      type: string
  GetClinics:
    type: object
    properties:
      clinicDetails:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              enum:
               - "specialist"
               - "dentist"
            addressId:
              type: string
            name:
              type: string
            address:
              type: string
            phoneNumber:
              type: string
            speciality:
              type: array
              items:
                type: string
            Location:
              type: object
              properties:
                lat:
                  type: number
                long:
                  type: number
  ClinicDoctors:
    type: object
    properties:
      doctors:
        type: array
        items:
          type: object
          properties:
            addressId:
              type: string
            prefix:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            emailAddress:
              type: string
            speciality:
              type: array
              items:
                type: string
  GetNearbyClinics:
    type: object
    properties:
      clinicAddresses:
        type: array
        items:
          type: object
          properties:
            verifiedDetails:
              type: object
              properties:
                type:
                  type: string
                addressId:
                  type: string
                name:
                  type: string
                address:
                  type: string
                phoneNumber:
                  type: string
                speciality:
                  type: array
                  items:
                    type: string
            generalDetails:
              type: object
              description: refer to https://gist.github.com/bamnet/479bb808c10f9946c9ef86e34e11b1e0
  AddressSuggestions:
    type: object
    properties:
      addressList:
        type: object
        description: results from google API search TextSearch
responses:
  GetReferralListResponse:
    description: "List of referrals"
    schema:
      $ref: '#/definitions/GetReferralList'
  GetClinicsResponse:
    description: Retunrs a list of all clinics registered by admin
    schema:
      $ref: '#/definitions/GetClinics'
  GetNearbyClinicsResponse:
    description: Returns clinic info plus gmaps addres format in field clinicDetails check one candidate https://developers.google.com/places/web-service/search#find-place-responses
    schema:
      $ref: '#/definitions/GetNearbyClinics'
  PostClinicRegistrationResponse:
    description: Returns successful completion of register clinic stage one
    schema:
      $ref: '#/definitions/PostRegistrationResponse'
  PostClinicVerificationResponse:
    description: Returns successful completion of verify clinic in backend
    schema:
      $ref: '#/definitions/PostRegistrationResponse'
  PostClinicAddressResponse:
    description: Returns successful completion of clinic address registration
    schema:
      $ref: '#/definitions/ClinicAddressResponse'
  GetClinicDoctorDetailsResponse:
    description: Returns list of doctors associated with clinic address
    schema:
     $ref: '#/definitions/ClinicDoctors'
  PostAddressList:
    description: This websocket provides 20 suggestions per string sent check results field https://developers.google.com/places/web-service/search#nearby-search-and-text-search-responses
    schema:
      $ref: '#/definitions/AddressSuggestions'
  CreateReferralResponse:
    description: On successful referral creation payload containing unique referral id is returned and emails are send to patient and clinic for whom referral is created
    schema:
      $ref: '#/definitions/ReferralResponse'
  GetAllMessages:
    description: On successful referral creation payload containing unique referral id is returned and emails are send to patient and clinic for whom referral is created
    schema:
      $ref: '#/definitions/CommentsList'
{{ end }}